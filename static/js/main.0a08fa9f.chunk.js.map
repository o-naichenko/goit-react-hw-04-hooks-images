{"version":3,"sources":["components/Modal/Modal.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/Button/Button.module.css","components/ImageGallery/ImageGallery.module.css","API-services/ApiService.js","components/Button/Button.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/Modal/Modal.jsx","components/ImageGallery/ImageGallery.jsx","components/Searchbar/SearchBar.jsx","App.js","index.js","components/Searchbar/SearchBar.module.css","App.module.css"],"names":["module","exports","ApiService","this","API_KEY","API_PATH","searchQuery","queryPage","perPage","query","split","join","fetch","Button","onClick","className","s","type","ImageGalleryItem","image","onImageClick","src","webformatURL","alt","tags","modalRoot","document","querySelector","Modal","closeModal","closeModalHandler","e","code","target","currentTarget","window","removeEventListener","useEffect","addEventListener","createPortal","Overlay","largeImageURL","ImageGallery","images","useState","largeImage","setLargeImage","map","apiService","SearchBar","onSearchBarSubmit","setSearchQuery","Searchbar","SearchForm","onSubmit","evt","preventDefault","trim","toast","error","resetQueryPage","button","buttonLabel","input","autoComplete","autoFocus","placeholder","value","onChange","App","setError","setImages","status","setStatus","setQueryPage","fetchImages","then","response","json","hits","length","Promise","reject","Error","prevImages","scrollTo","top","documentElement","scrollHeight","behavior","catch","message","position","autoClose","transition","Slide","newSearchQuery","noImagesFoundWarn","Loader","color","height","width","page","incrementQueryPage","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0a08fa9f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2AxMb\",\"Modal\":\"Modal_Modal__2WBTT\",\"image\":\"Modal_image__1cHuD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__3CvRl\",\"image\":\"ImageGalleryItem_image__2xsbt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3R1xi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__DncjJ\"};","export default class ApiService {\n  constructor() {\n    this.API_KEY = '19115402-2f4ed690e134b4c839000dec3';\n    this.API_PATH = 'https://pixabay.com/api/';\n    this.searchQuery = '';\n    this.queryPage = 1;\n    this.perPage = 12;\n  }\n  fetchImages(query) {\n    let { API_PATH, API_KEY, searchQuery, queryPage, perPage } = this;\n    searchQuery = query.split(' ').join('+');\n    return fetch(\n      `${API_PATH}?key=${API_KEY}&q=${searchQuery}&page=${queryPage}&per_page=${perPage}`,\n    );\n  }\n  incrementQueryPage() {\n    this.queryPage += 1;\n  }\n  resetQueryPage() {\n    this.queryPage = 1;\n  }\n}\n","import React from 'react';\nimport s from './Button.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function Button({ onClick }) {\n  return (\n    <button className={s.Button} type=\"button\" onClick={onClick}>\n      Load more\n    </button>\n  );\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./ImageGalleryItem.module.css\";\n\nexport default function ImageGalleryItem({ image, onImageClick }) {\n  return (\n    <li className={s.ImageGalleryItem}>\n      <img\n        className={s.image}\n        src={image.webformatURL}\n        alt={image.tags}\n        onClick={() => onImageClick(image)}\n      />\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  image: PropTypes.shape({\n    webformatURL: PropTypes.string.isRequired,\n    tags: PropTypes.string.isRequired,\n  }),\n  onImageClick: PropTypes.func.isRequired,\n};\n","import React, { useEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport PropTypes from \"prop-types\";\n\nimport s from \"./Modal.module.css\";\n\nconst modalRoot = document.querySelector(\"#portal-root\");\n\nexport default function Modal({ image, closeModal }) {\n  useEffect(() => {\n    window.addEventListener(\"keydown\", closeModalHandler);\n  });\n\n  function closeModalHandler(e) {\n    if (e.code === \"Escape\" || e.target === e.currentTarget) {\n      closeModal();\n      window.removeEventListener(\"keydown\", closeModalHandler);\n    }\n  }\n\n  return createPortal(\n    <div className={s.Overlay} onClick={closeModalHandler}>\n      <div className={s.Modal}>\n        <img className={s.image} src={image.largeImageURL} alt={image.tags} />\n      </div>\n    </div>,\n    modalRoot\n  );\n}\n\nModal.propTypes = {\n  image: PropTypes.shape({\n    largeImageURL: PropTypes.string,\n    tags: PropTypes.string,\n  }),\n  closeModal: PropTypes.func.isRequired,\n};\n","import React, { useState } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport PropTypes from \"prop-types\";\n\nimport s from \"./ImageGallery.module.css\";\n\nimport ImageGalleryItem from \"../ImageGalleryItem\";\nimport Modal from \"../Modal\";\n\nconst modalRoot = document.querySelector(\"#portal-root\");\n\nexport default function ImageGallery({ images }) {\n  const [largeImage, setLargeImage] = useState(null);\n\n  const onImageClick = (image) => {\n    setLargeImage(image);\n  };\n  const onCloseModal = () => {\n    setLargeImage(null);\n  };\n  return (\n    <>\n      {largeImage &&\n        createPortal(\n          <Modal image={largeImage} closeModal={onCloseModal} />,\n          modalRoot\n        )}\n      <ul className={s.ImageGallery}>\n        {images.map((image) => (\n          <ImageGalleryItem\n            image={image}\n            key={image.webformatURL}\n            onImageClick={onImageClick}\n          />\n        ))}\n      </ul>\n    </>\n  );\n}\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { toast } from \"react-toastify\";\nimport s from \"./SearchBar.module.css\";\n\nimport ApiService from \"../../API-services\";\n\nconst apiService = new ApiService();\nexport default function SearchBar({ onSearchBarSubmit }) {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  const onInputChange = (evt) => {\n    setSearchQuery(evt.target.value);\n  };\n\n  const onSubmit = (evt) => {\n    evt.preventDefault();\n\n    if (searchQuery.trim() === \"\") {\n      return toast.error(\"Please, input search query\");\n    }\n    apiService.resetQueryPage();\n    onSearchBarSubmit(searchQuery);\n  };\n  return (\n    <header className={s.Searchbar}>\n      <form className={s.SearchForm} onSubmit={onSubmit}>\n        <button type=\"submit\" className={s.button}>\n          <span className={s.buttonLabel}>Search</span>\n        </button>\n        <input\n          className={s.input}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={searchQuery}\n          onChange={onInputChange}\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchBar.propTypes = {\n  onSearchBarSubmit: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from \"react\";\nimport { ToastContainer, Slide } from \"react-toastify\";\nimport PropTypes from \"prop-types\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport s from \"./App.module.css\";\nimport ApiService from \"./API-services/\";\nimport Button from \"./components/Button\";\nimport ImageGallery from \"./components/ImageGallery\";\nimport Loader from \"react-loader-spinner\";\nimport SearchBar from \"./components/Searchbar\";\n\nconst apiService = new ApiService();\nexport default function App() {\n  const [error, setError] = useState(null);\n  const [images, setImages] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [status, setStatus] = useState(\"idle\");\n  const [queryPage, setQueryPage] = useState(1);\n\n  useEffect(() => {\n    if (searchQuery === \"\") {\n      return;\n    }\n\n    setStatus(\"pending\");\n    apiService\n      .fetchImages(searchQuery)\n      .then((response) => response.json())\n      .then((response) => {\n        if (response.hits.length === 0) {\n          return Promise.reject(new Error(`No ${searchQuery} images found`));\n        }\n        setImages((prevImages) => [...prevImages, ...response.hits]);\n        setStatus(\"resolved\");\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: \"smooth\",\n        });\n      })\n      .catch((error) => {\n        setStatus(\"error\");\n        setError(error.message);\n      });\n  }, [searchQuery, queryPage]);\n\n  const onLoadMoreBtnClick = () => {\n    setQueryPage((page) => page + 1);\n    apiService.incrementQueryPage();\n  };\n\n  const onSearchBarSubmit = (newSearchQuery) => {\n    setImages([]);\n    setSearchQuery(newSearchQuery);\n  };\n\n  return (\n    <div className={s.App}>\n      <ToastContainer\n        position=\"top-center\"\n        autoClose={2500}\n        transition={Slide}\n      />\n      <SearchBar onSearchBarSubmit={onSearchBarSubmit} />\n      {status === \"error\" && <b className={s.noImagesFoundWarn}>{error}</b>}\n      {images.length > 0 && <ImageGallery images={images} />}\n      {status === \"pending\" && (\n        <Loader\n          className={s.Loader}\n          type=\"ThreeDots\"\n          color=\"#3f51b5\"\n          height={40}\n          width={40}\n        />\n      )}\n      {status === \"resolved\" && images.length % 12 === 0 && (\n        <Button onClick={onLoadMoreBtnClick} />\n      )}\n    </div>\n  );\n}\n\nApp.propTypes = {\n  newSearchQuery: PropTypes.string,\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"SearchBar_Searchbar__LuSsJ\",\"SearchForm\":\"SearchBar_SearchForm__1OsD8\",\"button\":\"SearchBar_button__1AsWZ\",\"buttonLabel\":\"SearchBar_buttonLabel__2mFrQ\",\"input\":\"SearchBar_input__dWgLv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"noImagesFoundWarn\":\"App_noImagesFoundWarn__8eBZe\",\"Loader\":\"App_Loader__12yUz\"};"],"sourceRoot":""}